/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  UserFileAccess,
  UserFileAccessInterface,
} from "../../contracts/UserFileAccess";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "AddUserFileAccess",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "addUserFileAccess",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_host",
        type: "bytes",
      },
    ],
    name: "getHostPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getUserFilePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_tokenIds",
        type: "uint256[]",
      },
    ],
    name: "getUserFilesPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "hasUserFileAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_host",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setHostEventPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes[]",
        name: "_hosts",
        type: "bytes[]",
      },
      {
        internalType: "uint256[]",
        name: "_counts",
        type: "uint256[]",
      },
    ],
    name: "setUserFileEventCount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405267016345785d8a000060015534801561001c57600080fd5b5061003961002e61003e60201b60201c565b61004660201b60201c565b61010a565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6116d8806101196000396000f3fe6080604052600436106100915760003560e01c80636b6b96ab116100595780636b6b96ab1461019f578063715018a6146101dc5780638da5cb5b146101f3578063f2fde38b1461021e578063fed69ed31461024757610091565b80631ad4492114610096578063240c6967146100d35780634fe85025146100fc5780635b036f311461013957806365e5c89614610162575b600080fd5b3480156100a257600080fd5b506100bd60048036038101906100b89190610a0c565b610263565b6040516100ca9190610a48565b60405180910390f35b3480156100df57600080fd5b506100fa60048036038101906100f59190610b1e565b6103e6565b005b34801561010857600080fd5b50610123600480360381019061011e9190610cf4565b61051c565b6040516101309190610a48565b60405180910390f35b34801561014557600080fd5b50610160600480360381019061015b9190610d3d565b61055d565b005b34801561016e57600080fd5b5061018960048036038101906101849190610a0c565b61058c565b6040516101969190610db4565b60405180910390f35b3480156101ab57600080fd5b506101c660048036038101906101c19190610e92565b6105f3565b6040516101d39190610a48565b60405180910390f35b3480156101e857600080fd5b506101f1610659565b005b3480156101ff57600080fd5b5061020861066d565b6040516102159190610f1c565b60405180910390f35b34801561022a57600080fd5b5061024560048036038101906102409190610f63565b610696565b005b610261600480360381019061025c9190610a0c565b610719565b005b60008060009050600060026000858152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561036d57838290600052602060002090600202016040518060400160405290816000820180546102d290610fbf565b80601f01602080910402602001604051908101604052809291908181526020018280546102fe90610fbf565b801561034b5780601f106103205761010080835404028352916020019161034b565b820191906000526020600020905b81548152906001019060200180831161032e57829003601f168201915b505050505081526020016001820154815250508152602001906001019061029f565b50505050905060005b81518110156103db57600082828151811061039457610393610ff0565b5b602002602001015190506103ab816000015161051c565b81602001516103ba919061104e565b846103c59190611090565b93505080806103d3906110c4565b915050610376565b508192505050919050565b6103ee610874565b81819050848490501461040057600080fd5b60005b848490508110156105145760026000878152602001908152602001600020604051806040016040528087878581811061043f5761043e610ff0565b5b9050602002810190610451919061111b565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081526020018585858181106104ac576104ab610ff0565b5b90506020020135815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000190816104f49190611335565b50602082015181600101555050808061050c906110c4565b915050610403565b505050505050565b60008060038360405161052f919061146d565b90815260200160405180910390205490506000810361055357600154915050610558565b809150505b919050565b610565610874565b80600383604051610576919061146d565b9081526020016040518091039020819055505050565b60006004600083815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000806000905060005b835181101561064f57600084828151811061061b5761061a610ff0565b5b6020026020010151905061062e81610263565b836106399190611090565b9250508080610647906110c4565b9150506105fd565b5080915050919050565b610661610874565b61066b60006108f2565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61069e610874565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361070d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070490611507565b60405180910390fd5b610716816108f2565b50565b6000600260008381526020019081526020016000208054905011610772576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076990611573565b60405180910390fd5b600061077d82610263565b9050803410156107c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b9906115df565b60405180910390fd5b60016004600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507fc07d3b5090161100e18fad39e717305844f0baa28b5ef048073ca5e53be40f1d82338360405161085e939291906115ff565b60405180910390a161087082826109b6565b5050565b61087c6109ba565b73ffffffffffffffffffffffffffffffffffffffff1661089a61066d565b73ffffffffffffffffffffffffffffffffffffffff16146108f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e790611682565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5050565b600033905090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6109e9816109d6565b81146109f457600080fd5b50565b600081359050610a06816109e0565b92915050565b600060208284031215610a2257610a216109cc565b5b6000610a30848285016109f7565b91505092915050565b610a42816109d6565b82525050565b6000602082019050610a5d6000830184610a39565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610a8857610a87610a63565b5b8235905067ffffffffffffffff811115610aa557610aa4610a68565b5b602083019150836020820283011115610ac157610ac0610a6d565b5b9250929050565b60008083601f840112610ade57610add610a63565b5b8235905067ffffffffffffffff811115610afb57610afa610a68565b5b602083019150836020820283011115610b1757610b16610a6d565b5b9250929050565b600080600080600060608688031215610b3a57610b396109cc565b5b6000610b48888289016109f7565b955050602086013567ffffffffffffffff811115610b6957610b686109d1565b5b610b7588828901610a72565b9450945050604086013567ffffffffffffffff811115610b9857610b976109d1565b5b610ba488828901610ac8565b92509250509295509295909350565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610c0182610bb8565b810181811067ffffffffffffffff82111715610c2057610c1f610bc9565b5b80604052505050565b6000610c336109c2565b9050610c3f8282610bf8565b919050565b600067ffffffffffffffff821115610c5f57610c5e610bc9565b5b610c6882610bb8565b9050602081019050919050565b82818337600083830152505050565b6000610c97610c9284610c44565b610c29565b905082815260208101848484011115610cb357610cb2610bb3565b5b610cbe848285610c75565b509392505050565b600082601f830112610cdb57610cda610a63565b5b8135610ceb848260208601610c84565b91505092915050565b600060208284031215610d0a57610d096109cc565b5b600082013567ffffffffffffffff811115610d2857610d276109d1565b5b610d3484828501610cc6565b91505092915050565b60008060408385031215610d5457610d536109cc565b5b600083013567ffffffffffffffff811115610d7257610d716109d1565b5b610d7e85828601610cc6565b9250506020610d8f858286016109f7565b9150509250929050565b60008115159050919050565b610dae81610d99565b82525050565b6000602082019050610dc96000830184610da5565b92915050565b600067ffffffffffffffff821115610dea57610de9610bc9565b5b602082029050602081019050919050565b6000610e0e610e0984610dcf565b610c29565b90508083825260208201905060208402830185811115610e3157610e30610a6d565b5b835b81811015610e5a5780610e4688826109f7565b845260208401935050602081019050610e33565b5050509392505050565b600082601f830112610e7957610e78610a63565b5b8135610e89848260208601610dfb565b91505092915050565b600060208284031215610ea857610ea76109cc565b5b600082013567ffffffffffffffff811115610ec657610ec56109d1565b5b610ed284828501610e64565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f0682610edb565b9050919050565b610f1681610efb565b82525050565b6000602082019050610f316000830184610f0d565b92915050565b610f4081610efb565b8114610f4b57600080fd5b50565b600081359050610f5d81610f37565b92915050565b600060208284031215610f7957610f786109cc565b5b6000610f8784828501610f4e565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610fd757607f821691505b602082108103610fea57610fe9610f90565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611059826109d6565b9150611064836109d6565b9250828202611072816109d6565b915082820484148315176110895761108861101f565b5b5092915050565b600061109b826109d6565b91506110a6836109d6565b92508282019050808211156110be576110bd61101f565b5b92915050565b60006110cf826109d6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036111015761110061101f565b5b600182019050919050565b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126111385761113761110c565b5b80840192508235915067ffffffffffffffff82111561115a57611159611111565b5b60208301925060018202360383131561117657611175611116565b5b509250929050565b600081519050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026111eb7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826111ae565b6111f586836111ae565b95508019841693508086168417925050509392505050565b6000819050919050565b600061123261122d611228846109d6565b61120d565b6109d6565b9050919050565b6000819050919050565b61124c83611217565b61126061125882611239565b8484546111bb565b825550505050565b600090565b611275611268565b611280818484611243565b505050565b5b818110156112a45761129960008261126d565b600181019050611286565b5050565b601f8211156112e9576112ba81611189565b6112c38461119e565b810160208510156112d2578190505b6112e66112de8561119e565b830182611285565b50505b505050565b600082821c905092915050565b600061130c600019846008026112ee565b1980831691505092915050565b600061132583836112fb565b9150826002028217905092915050565b61133e8261117e565b67ffffffffffffffff81111561135757611356610bc9565b5b6113618254610fbf565b61136c8282856112a8565b600060209050601f83116001811461139f576000841561138d578287015190505b6113978582611319565b8655506113ff565b601f1984166113ad86611189565b60005b828110156113d5578489015182556001820191506020850194506020810190506113b0565b868310156113f257848901516113ee601f8916826112fb565b8355505b6001600288020188555050505b505050505050565b600081905092915050565b60005b83811015611430578082015181840152602081019050611415565b60008484015250505050565b60006114478261117e565b6114518185611407565b9350611461818560208601611412565b80840191505092915050565b6000611479828461143c565b915081905092915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006114f1602683611484565b91506114fc82611495565b604082019050919050565b60006020820190508181036000830152611520816114e4565b9050919050565b7f46696c65206576656e747320636f756e74206e6f742073657400000000000000600082015250565b600061155d601983611484565b915061156882611527565b602082019050919050565b6000602082019050818103600083015261158c81611550565b9050919050565b7f4e6f7420656e6f7567682066756e647300000000000000000000000000000000600082015250565b60006115c9601083611484565b91506115d482611593565b602082019050919050565b600060208201905081810360008301526115f8816115bc565b9050919050565b60006060820190506116146000830186610a39565b6116216020830185610f0d565b61162e6040830184610a39565b949350505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061166c602083611484565b915061167782611636565b602082019050919050565b6000602082019050818103600083015261169b8161165f565b905091905056fea26469706673582212209492ef6aa556b2d69710d440b87b2e9ab4edc5473f04cbf739b92b102b3fdd2464736f6c63430008110033";

type UserFileAccessConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UserFileAccessConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UserFileAccess__factory extends ContractFactory {
  constructor(...args: UserFileAccessConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UserFileAccess> {
    return super.deploy(overrides || {}) as Promise<UserFileAccess>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): UserFileAccess {
    return super.attach(address) as UserFileAccess;
  }
  override connect(signer: Signer): UserFileAccess__factory {
    return super.connect(signer) as UserFileAccess__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UserFileAccessInterface {
    return new utils.Interface(_abi) as UserFileAccessInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UserFileAccess {
    return new Contract(address, _abi, signerOrProvider) as UserFileAccess;
  }
}
